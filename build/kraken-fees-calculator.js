!function(e){function t(n){if(o[n])return o[n].exports;var r=o[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var o={};t.m=e,t.c=o,t.d=function(e,o,n){t.o(e,o)||Object.defineProperty(e,o,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,o){"use strict";(function(e){e.KrakenFeesCalculator=o(2)}).call(t,o(1))},function(e,t){var o;o=function(){return this}();try{o=o||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(o=window)}e.exports=o},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,o,n){return o&&e(t.prototype,o),n&&e(t,n),t}}(),KrakenFeesCalculator=function(){function KrakenFeesCalculator(e){return _classCallCheck(this,KrakenFeesCalculator),this.calculate(e)}return _createClass(KrakenFeesCalculator,[{key:"getValue",value:function(e,t){return e*t}},{key:"getTradeFees",value:function(e,t,o){return t*o*e/100}},{key:"getMarginFees",value:function(e){if(1==e.trade.leverage)return{opening:0,rollover:0,leverage:1};if(e.trade.leverage>1){var t=e.trade.duration||1;if("btc"===e.trade.asset)var o=.01,n=.01;else var o=.02,n=.02;return{opening:e.trade.amount*e.trade.price_in*o/100,rollover:e.trade.amount*e.trade.price_in*n/100*Math.ceil(t/4),leverage:e.trade.leverage}}}},{key:"getMaxBuyableAmount",value:function(e,t,o){return(e/t*(1-o/100)).toFixed(8)}},{key:"calculate",value:function calculate(options){var fees=[],value_in=this.getValue(options.trade.amount,options.trade.price_in),value_out=this.getValue(options.trade.amount,options.trade.price_out),opening_fees=this.getTradeFees(eval("options.fees."+options.trade.type_in),options.trade.amount,options.trade.price_in),closing_fees=this.getTradeFees(eval("options.fees."+options.trade.type_out),options.trade.amount,options.trade.price_out),margin_fees=this.getMarginFees(options),margin_opening_fees=margin_fees.opening,margin_rollover_fees=margin_fees.rollover;fees.push(opening_fees,closing_fees,margin_opening_fees,margin_rollover_fees);var total_fees=fees.reduce(function(e,t){return e+t},0);if("long"===options.trade.direction)var profit=(options.trade.price_out-options.trade.price_in)*options.trade.amount,net_profit=(options.trade.price_out-options.trade.price_in)*options.trade.amount-total_fees,accumulation=null;else if("short"===options.trade.direction)var profit=(options.trade.price_in-options.trade.price_out)*options.trade.amount,net_profit=(options.trade.price_in-options.trade.price_out)*options.trade.amount-total_fees,accumulation=this.getMaxBuyableAmount(value_in-opening_fees,options.trade.price_out,eval("options.fees."+options.trade.type_out));return{config:options,fees:{opening:opening_fees.toFixed(2),closing:closing_fees.toFixed(2),margin_opening:margin_opening_fees.toFixed(2),margin_rollover:margin_rollover_fees.toFixed(2)},result:{value_in:value_in.toFixed(2),value_out:value_out.toFixed(2),total_fees:total_fees.toFixed(2),profit:profit.toFixed(2),net_profit:net_profit.toFixed(2),net_profit_percentage:(100*((value_in+net_profit)/value_in-1)).toFixed(2),accumulation:accumulation,accumulation_percentage:(100*(accumulation/options.trade.amount-1)).toFixed(2)}}}}]),KrakenFeesCalculator}();module.exports=KrakenFeesCalculator}]);